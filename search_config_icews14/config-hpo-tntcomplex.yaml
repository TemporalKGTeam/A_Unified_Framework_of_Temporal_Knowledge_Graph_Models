console:
  quiet: False
  format: {}
  echo: True
  log_level: info

#local
task:
  folder: /home/ubuntu/gengyuan/search_experiments
  type: train
  device: 'cuda'
  reciprocal_training: true

random_seed:
  default: -1
  python: -1
  torch: -1
  numpy: -1
  numba: -1


# local
dataset:
  folder: /home/ubuntu/gengyuan/tkg-framework/data/icews14

  # indexes mapping [false, true]
  # TODO 可以保存到cache
  mapping: False
  filter: False
  temporal:
    resolution: "day"
    index: True
    float: False
  args: ~

  name: 'icews14'
  num_entities: -1
  num_relations: -1
  pickle: True

negative_sampling:
  type: 'pseudo_sampling'
  num_samples: -1 # should has no effect
  filter: False
  as_matrix: True
  target: tail
  args: ~

model:
  type: 'tntcomplex'
  rank: 1600
  no_time_emb: False
  init_size: 0.01
  args: ~




train:
  # Split used for training (specified under 'data.files').
  split: train
  type: negative_sampling

  loss:
    type: cross_entropy_loss
    args: ~

  max_epochs: 50

  loader:
    num_workers: 0
    pin_memory: False
    drop_last: False
    timeout: 0

  valid:
    split: test # in [test or valid]
    every: 5
    batch_size: 512
    subbatch_size: -1
    filter: time-aware  # in [off, static, time-aware]
    ordering: optimistic    # in [optimistic, peesimistic]
    k: [1, 3, 10]

    early_stopping:
      early_stop: True
      patience: 30
      epochs: 50
      metric_thresh: 0.2

  batch_size: 1000
  subbatch_size: -1
  subbatch_adaptive: True
  optimizer:
    type: Adagrad
    args:
      lr: 0.1

    default:
      type: Adagrad           # sgd, adagrad, adam

      args:
        +++: +++

  regularizer:
    n3:
      type: n3_regularize
      weight: 0.01
      args: ~
    lambda3:
      type: lambda3_regularize
      weight: 0.01
      args: ~
  inplace_regularizer: ~

  lr_scheduler: ""

  lr_scheduler_args:
    +++: +++

  trace_level: epoch           # batch, epoch

  checkpoint:
    every: 100
    keep: 3

  auto_correct: False
  abort_on_nan: True
  visualize_graph: False

eval:
  filter: time-aware
  ordering: descending
  preference: optimistic
  k: [1,3,10]


hpo:
  num_workers: -1
  num_trials: 80
  num_random_trials: 30
  hyperparam:
    - name: model.rank
      type: choice
      values: [1560, 780, 156]
      value_type: int
    - name: train.optimizer.args.lr
      type: range
      bounds: [0.05, 0.15]
      value_type: float


    # phase2
#    - name: model.embedding.global.init
#      type: choice
#      values: ['xavier_uniform', 'xavier_normal']
#      value_type: str
    - name: train.regularizer.n3.weight
      type: choice
      values: [0.01, 0.1, 0.001]
      value_type: float
    - name: train.regularizer.lambda3.weight
      type: choice
      values: [0.1, 1, 0.5]
      value_type: float


