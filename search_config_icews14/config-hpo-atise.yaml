console:
  quiet: False
  format: {}
  echo: True
  log_level: info

#local
task:
  folder: /home/ubuntu/gengyuan/search_experiments
  type: train
  device: 'cuda'
  reciprocal_training: true

random_seed:
  default: -1
  python: -1
  torch: -1
  numpy: -1
  numba: -1


# local
dataset:
  folder: /home/ubuntu/gengyuan/tkg-framework/data/icews14

  # indexes mapping [false, true]
  # TODO 可以保存到cache
  mapping: False
  filter: False
  temporal:
    resolution: "day"  #deprecated
    index: False
    float: True
    gran: 3
  args: ~

  name: 'icews14_atise'
  num_entities: -1
  num_relations: -1
  pickle: True

negative_sampling:
  type: 'time_agnostic'
  num_samples: 10
  filter: False
  as_matrix: True
  target: both
  args: ~

model:
  type: 'atise'
  embedding_dim: 500
  cmin: 0.003
  cmax: 0.3
  args: ~




train:
  # Split used for training (specified under 'data.files').
  split: train
  type: negative_sampling

  loss:
    type: log_rank_loss
    gamma: 120
    temp: 0.5
    args: ~

  max_epochs: 5000

  loader:
    num_workers: 0
    pin_memory: False
    drop_last: False
    timeout: 0

  valid:
    split: test # in [test or valid]
    every: 5
    batch_size: 512
    subbatch_size: -1
    filter: time-aware  # in [off, static, time-aware]
    ordering: optimistic    # in [optimistic, peesimistic]
    k: [1, 3, 10]

    early_stopping:
      early_stop: True
      patience: 100
      epochs: 50
      metric_thresh: 0.2

  batch_size: 512
  subbatch_size: -1
  subbatch_adaptive: True
  optimizer:
    type: Adam
    args:
      lr: 0.00003

    default:
      type: Adam

      args:
        +++: +++

  regularizer: ~
  inplace_regularizer:
    renorm:
      type: inplace_renorm_regularize
      p: 2
      dim: 0
      maxnorm: 1
      args: ~
    clamp:
      type: inplace_clamp_regularize
      min: 0.003
      max: 0.3
      args: ~

  lr_scheduler: ""

  lr_scheduler_args:
    +++: +++

  trace_level: epoch           # batch, epoch

  checkpoint:
    every: 1000
    keep: 3

  auto_correct: False
  abort_on_nan: True
  visualize_graph: False

eval:
  filter: time-aware
  ordering: ascending
  preference: optimistic
  k: [1,3,10]


hpo:
  num_workers: -1
  num_trials: 40
  num_random_trials: 20
  hyperparam:
    - name: model.embedding_dim
      type: choice
      values: [512, 128, 256, 1024]
      value_type: int
    - name: train.optimizer.args.lr
      type: choice
      values: [0.00003, 0.0003, 0.003, 0.03]
      value_type: float
    - name: task.reciprocal_training
      type: choice
      values: [true, false]
      value_type: bool
    - name: train.loss.type
      type: choice
      values: ['cross_entropy_loss', 'log_rank_loss']
      value_type: str


    # phase2
#    - name: model.embedding.global.init
#      type: choice
#      values: ['xavier_uniform', 'xavier_normal']
#      value_type: str
#    - name: train.n3.weight
#      type: range
#      bounds: [0.0, 0.1]
#      value_type: float
#    - name: train.lambda3.weight
#      type: range
#      bounds: [0.0, 0.1]
#      value_type: float



